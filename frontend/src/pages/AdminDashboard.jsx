// src/pages/AdminDashboard.jsx
import React, { useState, useEffect, useContext } from 'react';
import { Navigate, useNavigate } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { AuthContext } from '../contexts/AuthContext';
import '../styles/AdminDashboard.css';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
import AdminEventsList from '../components/Admin/AdminEventsList';
import AdminVenuesList from '../components/Admin/AdminVenuesList';
import AdminStats from '../components/Admin/AdminStats';

const AdminDashboard = () => {
  const { t } = useTranslation();
  const { user } = useContext(AuthContext);
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState('dashboard');
  const [loading, setLoading] = useState(true);
  const [stats, setStats] = useState(null);
  const [error, setError] = useState(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
  useEffect(() => {
    if (activeTab === 'dashboard') {
      const fetchStats = async () => {
        try {
          setLoading(true);
          
          // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ API
          // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
          setTimeout(() => {
            const mockStats = {
              bookings: {
                total_bookings: 152,
                status_stats: { confirmed: 118, cancelled: 34 },
                daily_stats: { "2023-04-15": 12, "2023-04-16": 18, "2023-04-17": 25 },
                top_events: [
                  { id: 1, title: '–§—É—Ç–±–æ–ª –ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞', bookings_count: 45 },
                  { id: 2, title: '–ë–∞—Å–∫–µ—Ç–±–æ–ª', bookings_count: 32 },
                  { id: 3, title: '–í–æ–ª–µ–π–±–æ–ª', bookings_count: 24 }
                ]
              },
              events: {
                total_events: 36,
                type_stats: { sport: 15, concert: 8, theater: 5, exhibition: 8 },
                status_stats: { upcoming: 24, ongoing: 5, finished: 3, cancelled: 4 },
                venue_stats: [
                  { id: 1, name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å—Ç–∞–¥–∏–æ–Ω', events_count: 12 },
                  { id: 2, name: '–î–≤–æ—Ä–µ—Ü —Å–ø–æ—Ä—Ç–∞', events_count: 8 },
                  { id: 3, name: '–ê—Ä–µ–Ω–∞', events_count: 6 }
                ]
              },
              users: {
                total_users: 245,
                admin_count: 3,
                top_users: [
                  { id: 1, username: 'user123', bookings_count: 8 },
                  { id: 2, username: 'sport_fan', bookings_count: 6 },
                  { id: 3, username: 'john_doe', bookings_count: 5 }
                ],
                monthly_stats: { '2023-01': 45, '2023-02': 52, '2023-03': 65 }
              }
            };
            
            setStats(mockStats);
            setLoading(false);
          }, 800);
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
          setError(t('admin.dashboard.fetchError'));
          setLoading(false);
        }
      };
      
      fetchStats();
    } else {
      setLoading(false);
    }
  }, [activeTab, t]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (!user || user.role !== 'admin') {
    return <Navigate to="/" replace />;
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–¥–º–∏–Ω–∫–∏
  const StatCard = ({ title, value, icon }) => (
    <div className="admin-stat-card">
      <div className="admin-stat-icon">{icon}</div>
      <div className="admin-stat-details">
        <h3>{title}</h3>
        <div className="admin-stat-value">{value}</div>
      </div>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–∑–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const DashboardOverview = () => (
    <div className="admin-stats-overview">
      <StatCard 
        title={t('admin.dashboard.events')} 
        value={stats?.events.total_events || 0} 
        icon="üé≠" 
      />
      
      <StatCard 
        title={t('admin.dashboard.bookings')} 
        value={stats?.bookings.total_bookings || 0} 
        icon="üéüÔ∏è" 
      />
      
      <StatCard 
        title={t('admin.dashboard.users')} 
        value={stats?.users.total_users || 0} 
        icon="üë•" 
      />
    </div>
  );

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const renderContent = () => {
    if (loading) {
      return (
        <div className="admin-loading">
          <div className="spinner"></div>
          <p>{t('common.loading')}</p>
        </div>
      );
    }

    if (error && activeTab === 'dashboard') {
      return (
        <div className="admin-error">
          <div className="error-icon">‚ö†Ô∏è</div>
          <p>{error}</p>
          <button 
            className="retry-button"
            onClick={() => setActiveTab('dashboard')}
          >
            {t('admin.dashboard.retry')}
          </button>
        </div>
      );
    }

    switch (activeTab) {
      case 'dashboard':
        return (
          <>
            <DashboardOverview />
            <AdminStats stats={stats} />
          </>
        );
      case 'events':
        return <AdminEventsList />;
      case 'venues':
        return <AdminVenuesList />;
      default:
        return <DashboardOverview />;
    }
  };

  return (
    <div className="admin-dashboard">
      <div className="admin-dashboard-container">
        <div className="admin-sidebar">
          <div className="admin-sidebar-header">
            <h2>Quicket</h2>
            <p className="admin-role-badge">{t('admin.dashboard.adminPanel')}</p>
          </div>
          
          <nav className="admin-sidebar-nav">
            <button 
              className={`admin-nav-item ${activeTab === 'dashboard' ? 'active' : ''}`}
              onClick={() => setActiveTab('dashboard')}
            >
              <span className="admin-nav-icon">üìä</span>
              {t('admin.dashboard.tabs.dashboard')}
            </button>
            
            <button 
              className={`admin-nav-item ${activeTab === 'events' ? 'active' : ''}`}
              onClick={() => setActiveTab('events')}
            >
              <span className="admin-nav-icon">üé≠</span>
              {t('admin.dashboard.tabs.events')}
            </button>
            
            <button 
              className={`admin-nav-item ${activeTab === 'venues' ? 'active' : ''}`}
              onClick={() => setActiveTab('venues')}
            >
              <span className="admin-nav-icon">üèüÔ∏è</span>
              {t('admin.dashboard.tabs.venues')}
            </button>
          </nav>
          
          <div className="admin-sidebar-footer">
            <div className="admin-user-info">
              <div className="admin-avatar">
                {user.username ? user.username.charAt(0).toUpperCase() : 'A'}
              </div>
              <div className="admin-user-details">
                <p className="admin-username">{user.username || 'Admin'}</p>
                <p className="admin-email">{user.email || 'admin@quicket.kz'}</p>
              </div>
            </div>
            
            <div className="admin-actions">
              <button 
                className="admin-action-button"
                onClick={() => navigate('/')}
              >
                <span className="admin-action-icon">üè†</span>
                {t('admin.dashboard.backToSite')}
              </button>
            </div>
          </div>
        </div>
        
        <div className="admin-content">
          <div className="admin-content-header">
            <h1 className="admin-page-title">
              {activeTab === 'dashboard' && t('admin.dashboard.tabs.dashboard')}
              {activeTab === 'events' && t('admin.dashboard.tabs.events')}
              {activeTab === 'venues' && t('admin.dashboard.tabs.venues')}
            </h1>
            
            <div className="admin-header-actions">
              {activeTab === 'events' && (
                <button 
                  className="admin-add-button"
                  onClick={() => {
                    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
                  }}
                >
                  <span className="admin-add-icon">+</span>
                  {t('admin.events.addNew')}
                </button>
              )}
              
              {activeTab === 'venues' && (
                <button 
                  className="admin-add-button"
                  onClick={() => {
                    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
                    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è');
                  }}
                >
                  <span className="admin-add-icon">+</span>
                  {t('admin.venues.addNew')}
                </button>
              )}
            </div>
          </div>
          
          <div className="admin-content-body">
            {renderContent()}
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard;